name: "Build and Deploy"

on:
  push:
    branches:
      - setup-dotnet-tests

jobs:
  build:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Build Package
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100

    - name: Restore
      run: dotnet restore TestLib

    - name: Build
      run: dotnet build TestLib --configuration Release --no-restore

    - name: Pack
      run: dotnet pack TestLib --configuration Release -o finalpackage --no-build

    # sign the NuGet Package -- can't do this without nuget.exe as dotnet CLI doesn't expose that
    - name: Publish artifact
      uses: actions/upload-artifact@master
      with:
        name: nupkg
        path: finalpackage
    
    - name: Get version
      uses: mavrosxristoforos/get-xml-info@1.0
      id: get_version
      with:
        xml-file: TestLib/TestLib.csproj
        xpath: '//VersionPrefix'

    - name: Echo version
      run: echo ${{ steps.get_version.outputs.info }}

  deploy:
    needs: build
    name: Deploy Packages
    runs-on: ubuntu-latest
    steps:
      - name: Download Package artifact
        uses: actions/download-artifact@master
        with:
          name: nupkg

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.2
        with:
         nuget-version: latest

      - name: Setup .NET SDK tools
        uses: actions/setup-dotnet@master
        with:
          dotnet-version: '3.1.100'
          source-url: ${{ secrets.GPR_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GPR (using dotnet)
        run: dotnet nuget push nupkg/*.nupkg -s ${{ secrets.GPR_URL }}

  tag_and_release:
    needs: build
    name: Tag and release
    runs-on: ubuntu-latest
    steps:
      - name: Tag
        run: git tag ${{ jobs.build.steps.get_version.outputs.info }} -a
      - name: Push tag
        run: git push origin --tags